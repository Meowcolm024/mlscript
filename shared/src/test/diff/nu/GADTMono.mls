:NewDefs
:GADTs

abstract class Option[type T]: None | Some[T]
module None extends Option[nothing]
class Some[T](get: T) extends Option[T]
//│ abstract class Option[T]: None | Some[T]
//│ module None extends Option
//│ class Some[T](get: T) extends Option

fun getOr(x, d) = if x is
    None then d
    Some(g) then g
//│ fun getOr: forall 'T 'a. (None | Some['T], 'a) -> (??T & 'T | 'a)

fun getOr(x: Option['a], d) = if x is
    None then d
    Some(g) then g
//│ fun getOr: forall 'a 'b. (x: Option['a], 'b) -> (??T & 'a | 'b)

fun getOr[T](x: Option[T], d: T): T = if x is
    None then d
    Some(g) then g
//│ fun getOr: forall 'T. (x: Option['T], d: 'T) -> 'T

fun get(x) = if x is Some(r) then r else error
//│ fun get: forall 'T. (Object & ~#Some | Some['T]) -> (??T & 'T)

fun get(x: Option['a]): x.T = if x is Some(r) then r else error
//│ fun get: forall 'a. (x: Option['a]) -> 'a



// Some[?a1] <: Option[?b1]

// Some[?a1] & ?c0 <: Option[?b1]
// ?c0 <: Option[?b1] | ~Some[?a1]


// Some[?a1] & ?c0 <: Bot
// ?c0 <: ~Some[?a1]


