
class Person: { name: string; age: int }
def Person = fun n -> fun a -> Person { name = n; age = a }
//│ Defined class Person
//│ Person: string -> int -> person & {age: int, name: string}

class Animal: {}
//│ Defined class Animal

def test = fun x -> case x of
  { Person -> x.age
  | Animal -> 0
  }
//│ test: ((person & {age: 'a}) | ((animal & anything) & ~person)) -> 'a | 0

// TODO simplify type to : test: Person & {age: 'a} | Animal -> 'a | 0

// TOOD support tyvars
:pe
test: Person & {age: 'a} | Animal -> 'a | 0
//│ /!\ Parse error: Expected end-of-input:1:41, found "| 0;" at l.20:41: test: Person & {age: 'a} | Animal -> 'a | 0

test: (Person & {age: int} | Animal) -> int
//│ /!!!\ Uncaught error: java.lang.Exception: Internal Error: Program reached and unexpected state.
//│ 	at: mlscript.utils.package$.lastWords(package.scala:135)
//│ 	at: mlscript.utils.package$.die(package.scala:134)
//│ 	at: mlscript.ConstraintSolver.$anonfun$constrain$4(ConstraintSolver.scala:182)
//│ 	at: scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
//│ 	at: mlscript.TyperHelpers.trace(TyperHelpers.scala:17)
//│ 	at: mlscript.ConstraintSolver.annoyingImpl$1(ConstraintSolver.scala:107)
//│ 	at: mlscript.ConstraintSolver.annoying$1(ConstraintSolver.scala:105)
//│ 	at: mlscript.ConstraintSolver.$anonfun$constrain$4(ConstraintSolver.scala:156)
//│ 	at: scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
//│ 	at: mlscript.TyperHelpers.trace(TyperHelpers.scala:17)

def a = Animal{}
//│ a: animal

a: {}
//│ res: anything

def p = Person "Bob" 42
//│ p: person & {age: int, name: string}

p: { age: int }
//│ res: {age: int}

test a
//│ /!!!\ Uncaught error: java.lang.Exception: Internal Error: Program reached and unexpected state.
//│ 	at: mlscript.utils.package$.lastWords(package.scala:135)
//│ 	at: mlscript.utils.package$.die(package.scala:134)
//│ 	at: mlscript.ConstraintSolver.$anonfun$constrain$4(ConstraintSolver.scala:182)
//│ 	at: scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
//│ 	at: mlscript.TyperHelpers.trace(TyperHelpers.scala:17)
//│ 	at: mlscript.ConstraintSolver.annoyingImpl$1(ConstraintSolver.scala:107)
//│ 	at: mlscript.ConstraintSolver.annoying$1(ConstraintSolver.scala:105)
//│ 	at: mlscript.ConstraintSolver.$anonfun$constrain$4(ConstraintSolver.scala:156)
//│ 	at: scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
//│ 	at: mlscript.TyperHelpers.trace(TyperHelpers.scala:17)

test p
//│ /!!!\ Uncaught error: java.lang.Exception: Internal Error: Program reached and unexpected state.
//│ 	at: mlscript.utils.package$.lastWords(package.scala:135)
//│ 	at: mlscript.utils.package$.die(package.scala:134)
//│ 	at: mlscript.ConstraintSolver.$anonfun$constrain$4(ConstraintSolver.scala:182)
//│ 	at: scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
//│ 	at: mlscript.TyperHelpers.trace(TyperHelpers.scala:17)
//│ 	at: mlscript.ConstraintSolver.annoyingImpl$1(ConstraintSolver.scala:107)
//│ 	at: mlscript.ConstraintSolver.annoying$1(ConstraintSolver.scala:105)
//│ 	at: mlscript.ConstraintSolver.$anonfun$constrain$4(ConstraintSolver.scala:156)
//│ 	at: scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.scala:18)
//│ 	at: mlscript.TyperHelpers.trace(TyperHelpers.scala:17)

:d
1: int
//│ 0. Typing term 1 : Primitive(int)
//│  0. Typing term 1
//│  0. : 1<int>
//│  CONSTRAIN 1<int> <! int
//│    where 
//│  C 1<int> <! int
//│   C 1<int> <! int<number>
//│ 0. : int
//│ Typed as: int
//│  where: 
//│ Compact type before simplification: CompactTypeScheme(‹CompactAppType(‹CompactPrimType(int<>)›,List())›,TreeMap())
//│ [occ] LinkedHashMap()
//│ [rec] TreeSet()
//│ [sub] 
//│ Compact type after simplification: CompactTypeScheme(‹CompactAppType(‹CompactPrimType(int<>)›,List())›,Map())
//│ res: int

